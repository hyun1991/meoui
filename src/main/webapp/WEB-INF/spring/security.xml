<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 비밀번호 인코더 설정. 스프링에서 제공하는 BCrypt 인코더 사용 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- ajax로 로그인을 처리하기 위해서는
		로그인이 성공했을 때 후처리 핸들러 클래스를 작성하고 등록
		로그인이 실패했을 때 후처리 핸들러 클래스를 작성하고 등록
		예를 들어 실패 후처리 핸들러 클래스에서 실패 횟수를 세서 5번이면 계정 블록등을 할 수 있다
	 -->
	<bean id="loginSuccessHandler" class="com.jeju.meoui.util.LoginSuccessHandler" />
	<bean id="loginFailureHandler" class="com.jeju.meoui.util.LoginFailureHandler" />
	<!--
		스프링 시큐리티는 web에 대한 보안만 제공하는 것이 아니다. 
		<http auto-config="true">를 통해 웹 관련 
		보안기능을 자동으로 활성화 
			스프링 시큐리티의 기본 url은 /login
			username-parameter, password-parameter는 /login으로 전달할 아이디, 비밀번호의 name
			authentication-success-handler-ref, authentication-failure-handler-ref
				로그인 성공, 실패 시 후처리할 핸들러 클래스 지정
			logout-success-url
				로그아웃했을 때 이동할 경로 지정
	 -->
	 <sec:http auto-config="true">
		<sec:form-login 
			username-parameter="loginid"	
			password-parameter="loginpwd" 
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler" />
		<sec:logout
			logout-success-url="/"
		/>
	</sec:http>
	<!--
		사용자 인증은 자바 데이터베이스를 이용한 서비스로 수행 (기본값으로 제공된다)
		비밀번호 검증은 9번째 줄에서 생성한 비밀번호 인코더 사용 
	 -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:jdbc-user-service data-source-ref="dataSource" /> 
			<sec:password-encoder ref="passwordEncoder" />
		</sec:authentication-provider>
	</sec:authentication-manager>
</beans>
